syntax = "proto3";

package dps_pb;
option go_package = "./dps_pb";
import "google/protobuf/empty.proto";
// export PATH=$PATH:$GOPATH/bin
// protoc --go_out=. --go_opt=paths=source_relative  --go-grpc_out=. --go-grpc_opt=paths=source_relative ./dps_server.proto

service DpsService {
  rpc Publish(PublishReq) returns (PublishRes) {}
  rpc GetActiveTopics(google.protobuf.Empty) returns (GetActiveTopicsRes){}
  rpc CreateTopic(CreateTopicReq) returns (CreateTopicRes) {}
  rpc Dequeue(DequeueReq) returns (DequeueRes) {}
  rpc Ack(AckReq) returns (google.protobuf.Empty) {}
  rpc NAck(NAckReq) returns (google.protobuf.Empty) {}
}

message CreateTopicReq {
  string TopicName = 1;
  DeliverPolicy DeliverPolicy = 2;
}

enum TopicActive {
  INACTIVE = 0;
  ACTIVE = 1;
}

enum DeliverPolicy {
  AT_LEAST_ONCE = 0;
  AT_MOST_ONCE = 1;
}

message CreateTopicRes {
  uint32 TopicId = 1;
  string Name = 2;
  TopicActive Active = 3;
  string DeliveryPolicy = 4;
}

message CommonRes {
  int32 Status = 1;
  string Message = 2;
}

message PublishReq {
  Item item = 1;
}

message PublishRes {
  string Id = 1;
  uint32 TopicId = 2;
  int32 Priority = 3;
  bytes Payload = 4;
  bytes Metadata = 5;
  int64 DeliverAfter = 6;
  string Status = 7;
}

message Item {
  string TopicName = 1;
  int32 Priority = 2; // Lower number mean higher priority
  bytes Payload = 3; // immutable binary blob. Feel free to put what ever u want
  bytes Metadata = 4; // mutable binary blob. Feel free to put what ever u want
  int64 DeliverAfter = 5; // Timestamp where item should be dequeue
}

message DequeueReq {
  string TopicName = 1;
  uint32 Count = 2;
}

message DequeueRes {
  repeated ItemRes items = 1;
}

message ItemRes {
  string Id = 1;
  uint32 TopicId = 2;
  int32 Priority = 3;
  bytes Payload = 4;
  bytes Metadata = 5;
  int64 DeliverAfter = 6;
  string Status = 7;
  uint32 LeaseDuration = 8;
}

message AckReq {
  string Topic = 1;
  string DpsAssignedUniqueId = 2;
}

message NAckReq {
  string Topic = 1;
  string DpsAssignedUniqueId = 2;
  bytes MetaData = 3;
}

message GetActiveTopicsRes {
  repeated Topic Topics = 1;
}

message Topic {
  uint32 Id = 1;
  string Name = 2;
  string DeliveryPolicy = 3;
}

